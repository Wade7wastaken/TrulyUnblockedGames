const fs = require("fs");
const htmlminifier = require("html-minifier");

const ignored_folders = ["Scripts", "form"];
const ignored_endings = ["md"];

// Remove the contents of the Output folder
fs.readdirSync("./Output").forEach((f) => fs.rmSync(`${dir}/${f}`));

function loop(loc) {
	const dir = fs.opendirSync(loc);
	let dirent;
	while ((dirent = dir.readSync()) !== null) {
		// filter out git
		if (dirent.name[0] != ".") {
			if (dirent.isFile()) {
				let ending = dirent.name.split(".").splice(-1)[0];
				let path = loc + "/" + dirent.name;
				if (
					!ignored_endings.includes(ending) &&
					(!loc.includes("EmulatorJS") || loc.includes("data")) &&
					!(loc.includes("EmulatorJS") && loc.includes("minify")) &&
					!(loc.includes("EmulatorJS") && ending == "html")
				) {
					const contents = fs.readFileSync(path, "utf8");
					switch (ending) {
						case "html": {
							const min = htmlminifier.minify(contents, {
								collapseBooleanAttributes: true,
								collapseInlineTagWhitespace: true,
								collapseWhitespace: true,
								continueOnParseError: true,
								html5: true,
								includeAutoGeneratedTags: false,
								minifyCSS: true,
								minifyJS: true,
								minifyURLs: true,
								quoteCharacter: '"',
								removeAttributeQuotes: true,
								removeComments: true,
								removeEmptyAttributes: true,
								removeOptionalTags: true,
								removeRedundantAttributes: true,
								removeScriptTypeAttributes: true,
								removeStyleLinkTypeAttributes: true,
								sortAttributes: true,
								sortClassName: true,
								useShortDoctype: true,
							});

							const outfile = "./Output" + path.slice(1);
							let outdir = outfile.split("/").slice(0, -1).join("/");

							// we need to create the folders before writing the file

							fs.mkdirSync(outdir, { recursive: true });

							fs.writeFileSync(outfile, min);
							break;
						}

						default:
							break;
					}

					console.log("File: " + path);
				}
			} else if (dirent.isDirectory()) {
				if (!ignored_folders.includes(dirent.name)) {
					loop(loc + "/" + dirent.name);
				}
			}
		}
	}
	dir.closeSync();
}

loop(".");
